{"version":3,"file":"static/js/448.b7b05b7b.chunk.js","mappings":"iJACA,OAAgB,WAAa,gC,mBCEd,SAASA,EAAT,GAQZ,IAPGC,EAOJ,EAPIA,MAAOC,EAOX,EAPWA,QAQT,OAAO,iBAAKC,UAAWC,EAAAA,WAAhB,UACFH,EAAMI,KAAI,SAAAC,GAAI,OAAI,SAAC,KAAD,CAAMC,GAAID,EAAKE,KAAf,SACdF,EAAKG,MADmCH,EAAKE,UAGlD,cAAGL,UAAWC,EAAAA,KAAd,SACKF,S,+JCRE,SAASQ,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OAAO,iCACH,SAAC,IAAD,CACIX,MAAO,CACH,CAAEQ,KAAM,OAAQD,KAAM,MAE1BN,QAAQ,YAGZ,2BACI,SAAC,IAAD,CAAiBW,KAAMC,EAAAA,MAD3B,kBAIA,SAAC,IAAD,CACIC,OAAQ,CACJ,CAAEC,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,OAAQC,MAAO,QAH/B,SAMKC,OAAOC,OAAOC,EAAAA,GAAgBf,KAAI,SAAAgB,GAAO,OAAI,SAAC,IAAD,CAAwBC,QAAS,EAC3E,wBACI,6BAASC,EAAAA,EAAAA,IAAcF,QAE3B,SAAC,IAAD,CAAQG,QAAS,kBAAMb,EAAS,WAAD,OAAYU,KAA3C,0BAJyDA","sources":["webpack://sportsday1.5/./src/styles/Breadcrumb.module.scss?853d","components/Breadcrumb.tsx","pages/Event/EventsList.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"breadcrumb\":\"Breadcrumb_breadcrumb__qk236\"};","import styles from '../styles/Breadcrumb.module.scss'\nimport { Link } from 'react-router-dom';\n\nexport default function Breadcrumb(\n    { paths, current }: {\n        paths: {\n            name: string,\n            link: string,\n        }[],\n        current: string,\n    }\n) {\n    return <div className={styles.breadcrumb}>\n        {paths.map(path => <Link to={path.link} key={path.link}>\n            {path.name}\n        </Link>)}\n        <p className={styles.last}>\n            {current}\n        </p>\n    </div>\n}\n","import { Table, TableRow } from '../../components/Table';\nimport { SportEventName } from 'mgssportsday-api/dist/types';\nimport { eventIdToName } from '../../api/helpers';\nimport Button from '../../components/Button';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons';\nimport Breadcrumb from '../../components/Breadcrumb';\n\nexport default function EventsList() {\n    const navigate = useNavigate()\n\n    return <>\n        <Breadcrumb\n            paths={[\n                { name: 'Home', link: '/' },\n            ]}\n            current='Events'\n        />\n\n        <h1>\n            <FontAwesomeIcon icon={faTrophy} /> All events\n        </h1>\n\n        <Table\n            header={[\n                { text: 'Event name', width: '80%' },\n                { text: 'View', width: '20%' },\n            ]}\n        >\n            {Object.values(SportEventName).map(eventId => <TableRow key={eventId} columns={[\n                <p>\n                    <strong>{eventIdToName(eventId)}</strong>\n                </p>,\n                <Button onClick={() => navigate(`/events/${eventId}`)}>\n                    View event\n                </Button>\n            ]} />)}\n        </Table>\n    </>\n}\n"],"names":["Breadcrumb","paths","current","className","styles","map","path","to","link","name","EventsList","navigate","useNavigate","icon","faTrophy","header","text","width","Object","values","SportEventName","eventId","columns","eventIdToName","onClick"],"sourceRoot":""}