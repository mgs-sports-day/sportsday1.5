{"version":3,"file":"static/js/530.1b7abcd4.chunk.js","mappings":"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","sources":["webpack://sportsday1.5/./src/styles/Breadcrumb.module.scss?853d","components/Breadcrumb.tsx","components/EventDataTable.tsx","pages/Form/FormOverview.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"breadcrumb\":\"Breadcrumb_breadcrumb__qk236\"};","import styles from '../styles/Breadcrumb.module.scss'\nimport { Link } from 'react-router-dom';\n\nexport default function Breadcrumb(\n    { paths, current }: {\n        paths: {\n            name: string,\n            link: string,\n        }[],\n        current: string,\n    }\n) {\n    return <div className={styles.breadcrumb}>\n        {paths.map(path => <Link to={path.link} key={path.link}>\n            {path.name}\n        </Link>)}\n        <p className={styles.last}>\n            {current}\n        </p>\n    </div>\n}\n","import { ReactElement, useMemo } from 'react';\nimport { useWindowSize } from 'usehooks-ts';\nimport { RowValue, Table, TableRow } from './Table';\n\ninterface Props {\n    firstRowHeading: string;\n    rows?: RowValue[][];\n}\n\nexport default function EventDataTable(\n    {\n        firstRowHeading,\n        rows\n    }: Props,\n): ReactElement {\n    const totalRowHeader = { text: 'Total points', rowSpan: 2, width: '15%', sortable: true };\n    const { width } = useWindowSize();\n    const totalRowFirst = width <= 450;\n\n    const sortedColumns = useMemo(() => {\n        return rows?.map(row => [\n            row[0],\n            ...(totalRowFirst ? [row.slice(-1)[0]] : []),\n            ...row.slice(1, -1),\n            ...(totalRowFirst ? [] : [row.slice(-1)[0]]),\n        ]);\n    }, [rows, totalRowFirst]);\n\n    if (!sortedColumns) {\n        return <></>;\n    }\n\n    return (\n        <Table\n            header={[\n                { text: firstRowHeading, rowSpan: 2 },\n                ...(totalRowFirst ? [totalRowHeader] : []),\n                { text: 'Competitor A', colSpan: 2 },\n                { text: 'Competitor B', colSpan: 2 },\n                { text: 'Competitor C', colSpan: 2 },\n                { text: 'Record bonus', rowSpan: 2, width: '10%' },\n                ...(totalRowFirst ? [] : [totalRowHeader]),\n            ]}\n            secondaryHeader={[\n                { text: 'Position', sortable: true },\n                { text: 'Points', sortable: true },\n                { text: 'Position', sortable: true },\n                { text: 'Points', sortable: true },\n                { text: 'Position', sortable: true },\n                { text: 'Points', sortable: true },\n            ]}\n        >\n            {\n                sortedColumns.map((e, i) => <TableRow columns={e} key={i} />)\n            }\n        </Table>\n    );\n}","import { faExternalLink } from '@fortawesome/free-solid-svg-icons/faExternalLink';\nimport type { Form } from 'mgssportsday-api/dist/types';\nimport { useMemo } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useApiQuery } from '../../api/context';\nimport { eventIdToName, linkToForm } from '../../api/helpers';\nimport Breadcrumb from '../../components/Breadcrumb';\nimport EventDataTable from '../../components/EventDataTable';\nimport LinkFAIcon from '../../components/LinkFAIcon';\nimport { Table, TableRow } from '../../components/Table';\n\nexport default function FormOverview() {\n    const { formId } = useParams();\n    const form = useMemo<Form>(() => {\n        if (formId) {\n            return linkToForm(formId);\n        } else {\n            throw new Error('No form ID provided!');\n        }\n    }, [formId]);\n\n    const [formResults] = useApiQuery(api => api.getFormResults(form.year, form.form));\n    const [allStandings] = useApiQuery(api => api.getSummaryStandings());\n\n    const thisFormStanding = useMemo(() => {\n        if (!allStandings) return undefined;\n        return allStandings.find(e => e.year === form.year && e.form === form.form);\n    }, [allStandings, form]);\n\n    return <>\n        <Breadcrumb\n            paths={[\n                { name: 'Home', link: '/' },\n                { name: 'Forms', link: '/forms' },\n            ]}\n            current={form.year + form.form}\n        />\n\n        <h1>\n            {form.year}{form.form}\n            <span>\n                Event breakdown\n            </span>\n        </h1>\n\n        {allStandings !== undefined && <Table>\n            <TableRow\n                columns={[\n                    { value: 'Total points', isHeader: true },\n                    { value: thisFormStanding?.points },\n                ]}\n            />\n            <TableRow\n                columns={[\n                    { value: 'School position', isHeader: true },\n                    { value: thisFormStanding?.schoolPos, autoHighlight: true },\n                ]}\n            />\n            <TableRow\n                columns={[\n                    { value: 'Year position', isHeader: true },\n                    { value: thisFormStanding?.yearPos, autoHighlight: true },\n                ]}\n            />\n        </Table>}\n\n        {formResults !== undefined && (\n            <EventDataTable\n                firstRowHeading='Event'\n                rows={\n                    formResults.map(result => [\n                        <Link to={`/events/${result.eventDb}`}>\n                            {eventIdToName(result.eventDb)}\n                            <LinkFAIcon icon={faExternalLink} />\n                        </Link>,\n                        { value: result.posA, autoHighlight: true },\n                        { value: result.ptsA },\n                        { value: result.posB, autoHighlight: true },\n                        { value: result.ptsB },\n                        { value: result.posC, autoHighlight: true },\n                        { value: result.ptsC },\n                        { value: result.ptsRB },\n                        { value: result.ptsTOTAL },\n                    ])\n                }\n            />\n        )}\n    </>;\n}\n"],"names":["Breadcrumb","paths","current","className","styles","map","path","to","link","name","EventDataTable","firstRowHeading","rows","totalRowHeader","text","rowSpan","width","sortable","totalRowFirst","useWindowSize","sortedColumns","useMemo","row","slice","header","colSpan","secondaryHeader","e","i","columns","FormOverview","formId","useParams","form","linkToForm","Error","useApiQuery","api","getFormResults","year","formResults","getSummaryStandings","allStandings","thisFormStanding","find","undefined","value","isHeader","points","schoolPos","autoHighlight","yearPos","result","eventDb","eventIdToName","icon","faExternalLink","posA","ptsA","posB","ptsB","posC","ptsC","ptsRB","ptsTOTAL"],"sourceRoot":""}